{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,oBAAoB,UAAU,EAAE,SAAS;AACzC,0CAA0C,WAAW;AACrD,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,OAAO;AACP,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,IAAI,YAAY,aAAa;AACtE;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,yDAAyD;AACzD,2CAA2C;AAC3C;AACA;AACA;AACA,aAAa;AACb,6DAA6D;AAC7D;AACA,2CAA2C;AAC3C;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,4CAA4C;AAC5C,kCAAkC;AAClC,SAAS;AACT;AACA;AACA,4CAA4C;AAC5C,SAAS;AACT;AACA;AACA,wBAAwB;AACxB,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA,2CAA2C;AAC3C,iBAAiB;AACjB;AACA,uDAAuD;AACvD,gDAAgD;AAChD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA,WAAW;AACX,0DAA0D;AAC1D;AACA;AACA,4BAA4B;AAC5B,6CAA6C;AAC7C,gDAAgD;AAChD,oBAAoB;AACpB,KAAK,SAAS;AACd;AACA;AACA;AACA;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE,sBAAsB;AACtB,kBAAkB;AAClB;AACA;AACA;AACA,4BAA4B,cAAc,GAAG;AAC7C,8BAA8B,WAAW,GAAG;AAC5C,IAAI;AACJ,uCAAuC;AACvC,sCAAsC;AACtC;AACA;AACA,uDAAuD;AACvD,sCAAsC;AACtC,6CAA6C;AAC7C;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,+BAA+B;AAC/B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,iDAAiD,OAAO,MAAM;AAC9D;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,iDAAiD,OAAO,MAAM;AAC9D;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO,MAAM;AAChE;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;;;;;;;;;;ACzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,6CAA6C;AAC7C,KAAK;AACL;AACA;AACA,uDAAuD;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA,kDAAkD;AAClD,6CAA6C;AAC7C,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UClFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,eAAe,mBAAO,CAAC,4CAAgB;AACvC,YAAY,mBAAO,CAAC,8CAAiB;AACrC,YAAY,mBAAO,CAAC,8CAAiB;AACrC,YAAY,mBAAO,CAAC,8CAAiB;AACrC,WAAW,mBAAO,CAAC,4CAAgB;AACnC,YAAY,mBAAO,CAAC,8CAAiB;AACrC,aAAa,mBAAO,CAAC,gDAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n  // calc\r\n\r\n  const result = document.querySelector(\".calculating__result span\");\r\n  let sex, height, weight, age, ratio;\r\n\r\n  if (localStorage.getItem(\"sex\")) {\r\n    sex = localStorage.getItem(\"sex\");\r\n  } else {\r\n    sex = \"female\";\r\n    localStorage.setItem(\"sex\", \"female\");\r\n  }\r\n\r\n  if (localStorage.getItem(\"ratio\")) {\r\n    ratio = localStorage.getItem(\"ratio\");\r\n  } else {\r\n    ratio = 1.375;\r\n    localStorage.setItem(\"ratio\", 1.375);\r\n  }\r\n\r\n  function calcTotal() {\r\n    if (!sex || !height || !weight || !age || !ratio) {\r\n      result.textContent = \"____\";\r\n      return;\r\n    }\r\n\r\n    if (sex === \"female\") {\r\n      result.textContent = Math.round(\r\n        (447.6 + 9.2 * weight + 3.1 * height - 4.3 * age) * ratio\r\n      );\r\n    } else {\r\n      result.textContent = Math.round(\r\n        (88.36 + 13.4 * weight + 4.8 * height - 5.7 * age) * ratio\r\n      );\r\n    }\r\n  }\r\n\r\n  calcTotal();\r\n\r\n  function initLocalSettings(selector, activeClass) {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    elements.forEach((elem) => {\r\n      elem.classList.remove(activeClass);\r\n      if (elem.getAttribute(\"id\") === localStorage.getItem(\"sex\")) {\r\n        elem.classList.add(activeClass);\r\n      }\r\n      if (elem.getAttribute(\"data-ratio\") === localStorage.getItem(\"ratio\")) {\r\n        elem.classList.add(activeClass);\r\n      }\r\n    });\r\n  }\r\n\r\n  initLocalSettings(\"#gender div\", \"calculating__choose-item_active\");\r\n  initLocalSettings(\r\n    \".calculating__choose_big div\",\r\n    \"calculating__choose-item_active\"\r\n  );\r\n\r\n  function getStaticInformation(selector, activeClass) {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    elements.forEach((elem) => {\r\n      elem.addEventListener(\"click\", (e) => {\r\n        if (e.target.getAttribute(\"data-ratio\")) {\r\n          ratio = +e.target.getAttribute(\"data-ratio\");\r\n          localStorage.setItem(\"ratio\", +e.target.getAttribute(\"data-ratio\"));\r\n        } else {\r\n          sex = e.target.getAttribute(\"id\");\r\n          localStorage.setItem(\"sex\", e.target.getAttribute(\"id\"));\r\n        }\r\n\r\n        elements.forEach((elem) => {\r\n          elem.classList.remove(activeClass);\r\n        });\r\n\r\n        e.target.classList.add(activeClass);\r\n\r\n        calcTotal();\r\n      });\r\n    });\r\n  }\r\n  getStaticInformation(\"#gender div\", \"calculating__choose-item_active\");\r\n  getStaticInformation(\r\n    \".calculating__choose_big div\",\r\n    \"calculating__choose-item_active\"\r\n  );\r\n\r\n  function getDynamicInformation(selector) {\r\n    const input = document.querySelector(selector);\r\n\r\n    input.addEventListener(\"input\", () => {\r\n      if (input.value.match(/\\D/g)) {\r\n        input.style.border = \"3px inset red\";\r\n      } else {\r\n        input.style.border = \"none\";\r\n      }\r\n      switch (input.getAttribute(\"id\")) {\r\n        case \"height\":\r\n          height = +input.value;\r\n          break;\r\n        case \"weight\":\r\n          weight = +input.value;\r\n          break;\r\n        case \"age\":\r\n          age = +input.value;\r\n          break;\r\n      }\r\n      calcTotal();\r\n    });\r\n  }\r\n\r\n  getDynamicInformation(\"#height\");\r\n  getDynamicInformation(\"#weight\");\r\n  getDynamicInformation(\"#age\");\r\n}\r\n\r\nmodule.exports = calc;\r\n","function cards() {\r\n  //Використовуєм класи для карточок\r\n\r\n  class MenuCard {\r\n    // Клас, що описує об'єкт меню\r\n    constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n      // Конструктор класу, який ініціалізує властивості об'єкта\r\n\r\n      // Зберігає зображення властивість об'єкта\r\n      this.src = src;\r\n      // Зберігає опис зображення властивість об'єкта\r\n      this.alt = alt;\r\n      // Зберігає заголовок меню властивість об'єкта\r\n      this.title = title;\r\n      // Зберігає опис меню властивість об'єкта\r\n      this.descr = descr;\r\n      // Зберігає ціну меню властивість об'єкта\r\n      this.price = price;\r\n      // Зберігає список CSS класів для стилізації властивість об'єкта\r\n      this.classes = classes;\r\n      // Зберігає DOM елемент в який буде додано меню властивість об'єкта\r\n      this.parent = document.querySelector(parentSelector);\r\n      // Курс обміну для переведення ціни в гривні\r\n      this.transfer = 40;\r\n      // Переведення ціни в гривні\r\n      this.changeToUAH();\r\n    }\r\n\r\n    // Метод для переведення ціни в іншу валюту (гривні)\r\n    changeToUAH() {\r\n      this.price = this.price * this.transfer;\r\n    }\r\n\r\n    // Метод для створення HTML-розмітки елементу меню\r\n    render() {\r\n      // Створення нового DOM елементу div\r\n      const element = document.createElement(\"div\");\r\n\r\n      // Перевірка чи є в об'єкта класи для стилізації\r\n      if (this.classes.length === 0) {\r\n        // Якщо класів немає, то додати клас 'menu__item'\r\n        this.element = \"menu__item\";\r\n        element.classList.add(this.element);\r\n      } else {\r\n        // Якщо є, то додати їх усі до елементу\r\n        this.classes.forEach((className) => element.classList.add(className));\r\n      }\r\n      element.innerHTML = `\r\n        <img src= ${this.src} ${this.alt}>\r\n        <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n        <div class=\"menu__item-descr\">${this.descr}</div>\r\n        <div class=\"menu__item-divider\"></div>\r\n        <div class=\"menu__item-price\">\r\n          <div class=\"menu__item-cost\">Цена:</div>\r\n          <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n        </div>\r\n    `; // HTML-код елементу меню\r\n      this.parent.append(element); // Додавання створеного елементу меню в DOM\r\n    }\r\n  }\r\n\r\n  const getResourse = async (url) => {\r\n    const res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${error.status}`);\r\n    }\r\n    return await res.json();\r\n  };\r\n\r\n  getResourse(\"http://localhost:3000/menu\").then((data) => {\r\n    data.forEach(({ img, altimg, title, descr, price }) => {\r\n      new MenuCard(\r\n        img,\r\n        altimg,\r\n        title,\r\n        descr,\r\n        price,\r\n        \".menu .container\"\r\n      ).render();\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = cards;\r\n","function forms() {\r\n  //Forms\r\n\r\n  const forms = document.querySelectorAll(\"form\");\r\n  // Створюємо об'єкт з повідомленнями, що будуть виводитися під час відправки форми\r\n  const message = {\r\n    loading: \"Загрузка...\",\r\n    success: \"Спасибо! Скоро мы с вами свяжемся\",\r\n    failure: \"Что-то пошло не так...\",\r\n  };\r\n\r\n  // Додаємо обробник події на кожну форму на сторінці\r\n  forms.forEach((item) => {\r\n    bindPostData(item);\r\n  });\r\n\r\n  const postData = async (url, data) => {\r\n    // Функція, яка приймає URL та дані в форматі JSON, та відправляє POST запит на сервер\r\n    const res = await fetch(url, {\r\n      // Відправляємо запит на сервер з URL та JSON даними\r\n      method: \"POST\", // Встановлюємо метод запиту на POST\r\n      headers: {\r\n        // Встановлюємо заголовки запиту\r\n        \"Content-Type\": \"application/json\", // Встановлюємо тип даних на JSON\r\n      },\r\n      body: data, // Встановлюємо JSON дані в тіло запиту\r\n    });\r\n\r\n    return await res.json(); // Повертаємо JSON відповідь від сервера\r\n  };\r\n\r\n  function bindPostData(form) {\r\n    // Функція, яка вішає обробник на подію submit форми та відправляє дані на сервер\r\n    form.addEventListener(\"submit\", (e) => {\r\n      // Додаємо обробник події submit на форму\r\n      e.preventDefault(); // Скасовуємо дію по замовчуванню (відправку форми)\r\n\r\n      let statusMessage = document.createElement(\"img\"); // Створюємо елемент зображення\r\n      statusMessage.src = message.loading; // Встановлюємо зображення завантаження\r\n      statusMessage.style.cssText = `\r\n              display: block;\r\n              margin: 0 auto;\r\n          `; // Встановлюємо стилі для зображення\r\n      form.insertAdjacentElement(\"afterend\", statusMessage); // Вставляємо зображення після форми\r\n\r\n      const formData = new FormData(form); // Створюємо об'єкт FormData з даними форми\r\n\r\n      const json = JSON.stringify(Object.fromEntries(formData.entries())); // Конвертуємо дані FormData в JSON формат\r\n\r\n      postData(\"http://localhost:3000/requests\", json) // Відправляємо дані на сервер\r\n        .then((data) => {\r\n          // Обробляємо відповідь сервера\r\n          console.log(data); // Виводимо відповідь в консоль\r\n          showThanksModal(message.success); // Відображаємо модальне вікно з повідомленням про успішну відправку даних\r\n          statusMessage.remove(); // Видаляємо елемент зображення зі статусом відправки\r\n        })\r\n        .catch(() => {\r\n          // Обробляємо помилку відправки даних\r\n          showThanksModal(message.failure); // Відображаємо модальне вікно з повідомленням про невдалу відправку даних\r\n        })\r\n        .finally(() => {\r\n          // Виконується завжди після відправки даних, незалежно від успішності чи невдачі\r\n          form.reset(); // Очищаємо форму після відправки даних\r\n        });\r\n    });\r\n  }\r\n\r\n  function showThanksModal(message) {\r\n    // Функція приймає повідомлення, яке буде відображено в модальному вікні\r\n    const prevModalDialog = document.querySelector(\".modal__dialog\"); // Знаходимо елемент модального вікна, який містить контент\r\n\r\n    prevModalDialog.classList.add(\"hide\"); // Додаємо клас \"hide\", щоб приховати контент модального вікна\r\n    openModal(); // Викликаємо функцію, яка відкриє модальне вікно\r\n\r\n    const thanksModal = document.createElement(\"div\"); // Створюємо елемент div\r\n    thanksModal.classList.add(\"modal__dialog\"); // Додаємо клас \"modal__dialog\" до створеного елемента\r\n    thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `; // Додаємо html-код для відображення модального вікна з переданим повідомленням\r\n    document.querySelector(\".modal\").append(thanksModal); // Додаємо створений елемент до модального вікна\r\n    setTimeout(() => {\r\n      // Запускаємо тайме\r\n      thanksModal.remove(); // Видаляємо створений елемент модального вікна\r\n      prevModalDialog.classList.add(\"show\"); // Додаємо клас \"show\", щоб показати контент модального вікна\r\n      prevModalDialog.classList.remove(\"hide\"); // Видаляємо клас \"hide\"\r\n      closeModal(); // Викликаємо функцію, яка закриє модальне вікно\r\n    }, 4000); // Задаємо час, через який буде виконано функцію в мілісекундах\r\n  }\r\n}\r\n\r\nmodule.exports = forms;\r\n","function modal() {\r\n  // Modal\r\n\r\n  // Отримуємо всі кнопки, які мають атрибут data-modal\r\n  const modalTrigger = document.querySelectorAll(\"[data-modal]\");\r\n\r\n  // Отримуємо модальне вікно та кнопку для закриття\r\n  const modal = document.querySelector(\".modal\");\r\n  const modalCloseBtn = document.querySelector(\"[data-close]\");\r\n\r\n  // Додаємо обробник події \"click\" на всі кнопки з атрибутом data-modal, щоб відкривати модальне вікно при кліку\r\n  modalTrigger.forEach((btn) => {\r\n    btn.addEventListener(\"click\", openModal);\r\n  });\r\n\r\n  // Функція, яка відкриває модальне вікно\r\n  function openModal() {\r\n    // Додаємо клас \"show\" та видаляємо клас \"hide\" у модальному вікні, щоб показати його на сторінці\r\n    modal.classList.add(\"show\");\r\n    modal.classList.remove(\"hide\");\r\n\r\n    // Забороняємо прокручування сторінки, поки відображається модальне вікно\r\n    document.body.style.overflow = \"hidden\";\r\n\r\n    // Очищуємо таймер, який автоматично відкриває модальне вікно через 5 секунд\r\n    clearInterval(modalTimeId);\r\n  }\r\n\r\n  // Функція, яка закриває модальне вікно\r\n  function closeModal() {\r\n    // Додаємо клас \"hide\" та видаляємо клас \"show\" у модальному вікні, щоб приховати його на сторінці\r\n    modal.classList.add(\"hide\");\r\n    modal.classList.remove(\"show\");\r\n\r\n    // Дозволяємо прокручування сторінки після закриття модального ві`кна\r\n    document.body.style.overflow = \"\";\r\n  }\r\n\r\n  // Додаємо обробник події \"click\" на кнопку закриття модального вікна, щоб закрити його при кліку на кнопку\r\n  modalCloseBtn.addEventListener(\"click\", closeModal);\r\n\r\n  // Додаємо обробник події \"click\" на модальне вікно, щоб закривати його при кліку поза вікном\r\n  modal.addEventListener(\"click\", (e) => {\r\n    if (e.target === modal) {\r\n      closeModal();\r\n    }\r\n  });\r\n\r\n  // Додаємо обробник події \"keydown\" на документ, щоб закривати модальне вікно при натисканні на клавішу Esc\r\n  document.addEventListener(\"keydown\", (e) => {\r\n    if (e.code === \"Escape\" && modal.classList.contains(\"show\")) {\r\n      closeModal();\r\n    }\r\n  });\r\n\r\n  // Задаємо затримку появи модального вікна\r\n  const modalTimeId = setTimeout(openModal, 500000);\r\n\r\n  // Функція, яка відкриває модальне вікно при скроллі до кінця сторінки\r\n  function showModalByScroll() {\r\n    if (\r\n      window.pageYOffset + document.documentElement.clientHeight >=\r\n      document.documentElement.scrollHeight - 1\r\n    ) {\r\n      openModal();\r\n      window.removeEventListener(\"scroll\", showModalByScroll);\r\n    }\r\n  }\r\n  // Додаємо обробник події scroll до вікна браузера\r\n  window.addEventListener(\"scroll\", showModalByScroll);\r\n}\r\n\r\nmodule.exports = modal;\r\n","function slider() {\r\n  //Slider\r\n\r\n  const slides = document.querySelectorAll(\".offer__slide\"), // Знаходимо всі елементи слайдів\r\n    slider = document.querySelector(\".offer__slider\"), //Знаходимо перший елемент з класом \"offer__slider\"\r\n    prev = document.querySelector(\".offer__slider-prev\"), // Знаходимо елемент кнопки \"попередній слайд\"\r\n    next = document.querySelector(\".offer__slider-next\"), // Знаходимо елемент кнопки \"наступний слайд\"\r\n    total = document.querySelector(\"#total\"), // Знаходимо елемент, в якому буде відображатися загальна кількість слайдів\r\n    current = document.querySelector(\"#current\"), // Знаходимо елемент, в якому буде відображатися поточний номер слайда\r\n    slidesWrapper = document.querySelector(\".offer__slider-wrapper\"), // Знаходимо обгортку слайдів\r\n    width = window.getComputedStyle(slidesWrapper).width, // Визначаємо ширину обгортки слайдів\r\n    slidesField = document.querySelector(\".offer__slider-inner\"); // Знаходимо елемент, який містить всі слайди\r\n  let slideIndex = 1; // Встановлюємо початковий номер слайда\r\n  let offset = 0; // Встановлюємо початкове зміщення слайдів\r\n\r\n  if (slides.length < 10) {\r\n    // Перевіряємо, чи кількість слайдів менше 10\r\n    total.textContent = `0${slides.length}`; // Якщо так, то додаємо 0 перед загальною кількістю слайдів\r\n    current.textContent = `0${slideIndex}`; // Якщо так, то додаємо 0 перед поточним номером слайда\r\n  } else {\r\n    total.textContent = slides.length; // Якщо кількість слайдів більше або дорівнює 10, то виводимо звичайну загальну кількість слайдів\r\n    current.textContent = slideIndex; // Якщо кількість слайдів більше або дорівнює 10, то виводимо звичайний поточний номер слайда\r\n  }\r\n\r\n  slidesField.style.width = 100 * slides.length + \"%\"; // Встановлюємо ширину поля слайдів\r\n  slidesField.style.display = \"flex\"; // Встановлюємо стиль відображення для поля слайдів\r\n  slidesField.style.transition = \"0.5s all\"; // Встановлюємо стиль переходу для поля слайдів\r\n\r\n  slidesWrapper.style.overflow = \"hidden\"; // Встановлюємо стиль переповнення для обгортки слайдів\r\n\r\n  slides.forEach((slide) => {\r\n    // Проходимось по кожному слайду\r\n    slide.style.width = width; // Встановлюємо ширину для кожного слайда\r\n  });\r\n\r\n  slider.style.position = \"relative\";\r\n\r\n  const indicators = document.createElement(\"ol\"),\r\n    dots = [];\r\n  indicators.classList.add(\"carousel-indicators\");\r\n  indicators.style.cssText = `\r\n  position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 15;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-right: 15%;\r\n    margin-left: 15%;\r\n    list-style: none; \r\n    `;\r\n  slider.append(indicators);\r\n\r\n  for (let i = 0; i < slides.length; i++) {\r\n    const dot = document.createElement(\"li\");\r\n    dot.setAttribute(\"data-slide-to\", i + 1);\r\n    dot.style.cssText = `\r\n    box-sizing: content-box;\r\n    flex: 0 1 auto;\r\n    width: 30px;\r\n    height: 6px;\r\n    margin-right: 3px;\r\n    margin-left: 3px;\r\n    cursor: pointer;\r\n    background-color: #fff;\r\n    background-clip: padding-box;\r\n    border-top: 10px solid transparent;\r\n    border-bottom: 10px solid transparent;\r\n    opacity: .5;\r\n    transition: opacity .6s ease;\r\n    `;\r\n    if (i == 0) {\r\n      dot.style.opacity = 1;\r\n    }\r\n    indicators.append(dot);\r\n    dots.push(dot);\r\n  }\r\n\r\n  function deleteNotDigits(str) {\r\n    return +str.replace(/\\D/g, \"\");\r\n  }\r\n\r\n  function opacityDot() {\r\n    dots.forEach((dot) => (dot.style.opacity = \".5\"));\r\n    dots[slideIndex - 1].style.opacity = \"1\";\r\n  }\r\n  next.addEventListener(\"click\", () => {\r\n    // додаємо обробник події для кнопки \"next\"\r\n    if (offset == deleteNotDigits(width) * (slides.length - 1)) {\r\n      // якщо досягнуто останнього слайда, перехід на перший слайд\r\n      offset = 0;\r\n    } else {\r\n      // інакше збільшуємо відступ на ширину слайда\r\n      offset += deleteNotDigits(width);\r\n    }\r\n\r\n    slidesField.style.transform = `translateX(-${offset}px)`; // зміщуємо вміст блоку зі слайдами\r\n\r\n    if (slideIndex == slides.length) {\r\n      // якщо досягнуто останнього слайда, перехід на перший слайд\r\n      slideIndex = 1;\r\n    } else {\r\n      // інакше збільшуємо індекс поточного слайда\r\n      slideIndex++;\r\n    }\r\n\r\n    if (slides.length < 10) {\r\n      // якщо кількість слайдів менша за 10, додаємо перед індексом \"0\"\r\n      current.textContent = `0${slideIndex}`;\r\n    } else {\r\n      // інакше відображаємо просто індекс\r\n      current.textContent = slideIndex;\r\n    }\r\n\r\n    opacityDot();\r\n  });\r\n\r\n  prev.addEventListener(\"click\", () => {\r\n    // додаємо обробник події для кнопки \"prev\"\r\n    if (offset == 0) {\r\n      // якщо досягнуто першого слайда, перехід на останній слайд\r\n      offset = deleteNotDigits(width) * (slides.length - 1);\r\n    } else {\r\n      // інакше зменшуємо відступ на ширину слайда\r\n      offset -= deleteNotDigits(width);\r\n    }\r\n\r\n    slidesField.style.transform = `translateX(-${offset}px)`; // зміщуємо вміст блоку зі слайдами\r\n\r\n    if (slideIndex == 1) {\r\n      // якщо досягнуто першого слайда, перехід на останній слайд\r\n      slideIndex = slides.length;\r\n    } else {\r\n      // інакше зменшуємо індекс поточного слайда\r\n      slideIndex--;\r\n    }\r\n\r\n    if (slides.length < 10) {\r\n      // якщо кількість слайдів менша за 10, додаємо перед індексом \"0\"\r\n      current.textContent = `0${slideIndex}`;\r\n    } else {\r\n      // інакше відображаємо просто\r\n    }\r\n\r\n    opacityDot();\r\n  });\r\n\r\n  dots.forEach((dot) => {\r\n    dot.addEventListener(\"click\", (e) => {\r\n      const slideTo = e.target.getAttribute(\"data-slide-to\");\r\n\r\n      slideIndex = slideTo;\r\n      offset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`; // зміщуємо вміст блоку зі слайдами\r\n\r\n      if (slides.length < 10) {\r\n        // якщо кількість слайдів менша за 10, додаємо перед індексом \"0\"\r\n        current.textContent = `0${slideIndex}`;\r\n      } else {\r\n        // інакше відображаємо просто індекс\r\n        current.textContent = slideIndex;\r\n      }\r\n\r\n      opacityDot();\r\n    });\r\n  });\r\n}\r\nmodule.exports = slider;\r\n","function tabs() {\r\n  // Tabs\r\n\r\n  // Отримуємо всі елементи з класом \".tabheader__item\"\r\n  let tabs = document.querySelectorAll(\".tabheader__item\");\r\n  // Отримуємо всі елементи з класом \".tabcontent\"\r\n  let tabsContent = document.querySelectorAll(\".tabcontent\");\r\n  // Отримуємо батьківський елемент, щоб додати обробник подій\r\n  let tabsParent = document.querySelector(\".tabheader__items\");\r\n\r\n  // Функція для приховування вмісту всіх табів\r\n  function hideTabContent() {\r\n    tabsContent.forEach((item) => {\r\n      item.classList.add(\"hide\"); // Додаємо клас \"hide\"\r\n      item.classList.remove(\"show\", \"fade\"); // Видаляємо класи \"show\" та \"fade\"\r\n    });\r\n\r\n    tabs.forEach((item) => {\r\n      item.classList.remove(\"tabheader__item_active\"); // Видаляємо клас \"tabheader__item_active\"\r\n    });\r\n  }\r\n\r\n  // Функція для відображення вмісту табу з індексом \"i\"\r\n  function showTabContent(i = 0) {\r\n    tabsContent[i].classList.add(\"show\", \"fade\"); // Додаємо класи \"show\" та \"fade\"\r\n    tabsContent[i].classList.remove(\"hide\"); // Видаляємо клас \"hide\"\r\n    tabs[i].classList.add(\"tabheader__item_active\"); // Додаємо клас \"tabheader__item_active\"\r\n  }\r\n\r\n  // Приховуємо вміст всіх табів\r\n  hideTabContent();\r\n  // Відображуємо вміст першого табу\r\n  showTabContent();\r\n\r\n  // Додаємо обробник подій \"click\" до батьківського елемента \"tabsParent\"\r\n  tabsParent.addEventListener(\"click\", function (event) {\r\n    const target = event.target; // Отримуємо цільовий елемент, на який клікнули\r\n    if (target && target.classList.contains(\"tabheader__item\")) {\r\n      // Перевіряємо, чи цільовий елемент має клас \".tabheader__item\"\r\n      tabs.forEach((item, i) => {\r\n        // Проходимо по всім елементам в \"tabs\"\r\n        if (target == item) {\r\n          // Якщо збігається, то викликаємо функції \"hideTabContent()\" та \"showTabContent(i)\"\r\n          hideTabContent();\r\n          showTabContent(i);\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = tabs;\r\n","function timer() {\r\n  // Timer\r\n\r\n  // Задаємо кінцевий термін в форматі рядка\r\n  const deadline = \"2023-09-13\";\r\n\r\n  // Функція для обчислення часу, який залишився до кінцевого терміну\r\n  function getTimeRemaining(endtime) {\r\n    // Ініціалізуємо змінні, які будуть містити відповідні значення часу\r\n    let days, seconds, minutes, hours;\r\n\r\n    // Обчислюємо час, який залишився до кінцевого терміну у мілісекундах\r\n    const t = Date.parse(endtime) - Date.parse(new Date());\r\n\r\n    // Якщо залишилось менше 1 секунди, то усі значення часу будуть 0\r\n    if (t <= 0) {\r\n      days = 0;\r\n      hours = 0;\r\n      minutes = 0;\r\n      seconds = 0;\r\n    } else {\r\n      // Інакше обчислюємо кількість днів, годин, хвилин та секунд\r\n      days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n      seconds = Math.floor((t / 1000) % 60);\r\n      minutes = Math.floor((t / 1000 / 60) % 60);\r\n      hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n    }\r\n\r\n    // Повертаємо об'єкт зі значеннями часу\r\n    return {\r\n      total: t,\r\n      days: days,\r\n      hours: hours,\r\n      minutes: minutes,\r\n      seconds: seconds,\r\n    };\r\n  }\r\n\r\n  // Функція, яка додає \"0\" перед значенням часу, якщо воно однозначне\r\n  function getZero(num) {\r\n    if (num >= 0 && num < 10) {\r\n      return \"0\" + num;\r\n    } else {\r\n      return num;\r\n    }\r\n  }\r\n  // Функція для відображення значень часу на сторінці\r\n  function setClock(selector, endtime) {\r\n    // Отримуємо елементи таймера зі сторінки\r\n    const timer = document.querySelector(selector),\r\n      days = timer.querySelector(\"#days\"),\r\n      hours = timer.querySelector(\"#hours\"),\r\n      minutes = timer.querySelector(\"#minutes\"),\r\n      seconds = timer.querySelector(\"#seconds\");\r\n\r\n    // Встановлюємо інтервал для оновлення значень таймера кожну секунду\r\n    const timeInterval = setInterval(updateClock, 1000);\r\n\r\n    // Оновлюємо значення таймера\r\n    updateClock();\r\n\r\n    function updateClock() {\r\n      // Отримуємо значення часу залишку від функції getTimeRemaining()\r\n      const t = getTimeRemaining(endtime);\r\n\r\n      // Відображаємо значення днів, годин, хвилин та секунд на сторінці\r\n      days.innerHTML = getZero(t.days);\r\n      hours.innerHTML = getZero(t.hours);\r\n      minutes.innerHTML = getZero(t.minutes);\r\n      seconds.innerHTML = getZero(t.seconds);\r\n\r\n      // Якщо час вичерпано, то зупиняємо інтервал\r\n      if (t.total <= 0) {\r\n        clearInterval(timeInterval);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Встановлюємо таймер на сторінку з використанням заданих параметрів\r\n  setClock(\".timer\", deadline);\r\n}\r\n\r\nmodule.exports = timer;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener(\"DOMContentLoaded\", function () {\r\n  const tabs = require(\"./modules/tabs\"),\r\n    modal = require(\"./modules/modal\"),\r\n    timer = require(\"./modules/timer\"),\r\n    cards = require(\"./modules/cards\"),\r\n    calc = require(\"./modules/calc\"),\r\n    forms = require(\"./modules/forms\"),\r\n    slider = require(\"./modules/slider\");\r\n\r\n  tabs();\r\n  modal();\r\n  timer();\r\n  cards();\r\n  calc();\r\n  forms();\r\n  slider();\r\n});\r\n"],"names":[],"sourceRoot":""}